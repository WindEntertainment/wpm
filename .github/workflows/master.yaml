name: Python CI

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build
        shell: bash
        run: |
          python ./build.py

      - name: Upload package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: "/home/runner/work/wpm/wpm/source.zip"
          retention-days: 1
          overwrite: true

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v0.0.1
      #     release_name: release
      #     draft: false
      #     prerelease: true

      - name: Create or Get Release ID
        id: release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            let release = releases.find(r => r.tag_name === 'latest');
            if (!release) {
              const { data: newRelease } = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: 'latest',
                name: 'Latest Release',
              });
              release = newRelease;
            }
            return release.upload_url;

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: "/home/runner/work/wpm/wpm/source.zip"
          asset_name: "source.zip"
          asset_content_type: application/zip
